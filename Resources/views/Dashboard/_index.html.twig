{% extends "ParabolAdminCoreBundle::base_admin_uncompressed.html.twig" %}

{% trans_default_domain "Admingenerator" %}

{#% block page_header_content %}<h1><span class="fa fa-dashboard" aria-hidden="true"></span> {% trans %}Dashboard{% endtrans %}</h1>{% endblock %#}

{% block page_content %}

<div class="row" id="totalActivity">
    <div class="col-lg-3 col-xs-6">
      <!-- small box -->
      <div class="small-box bg-aqua">
        <div class="inner">
         
        </div>
        <div class="icon">
          <i class="ion ion-ios-speedometer"></i>
        </div>
        <!--a href="#" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a-->
      </div>
    </div><!-- ./col -->
    <div class="col-lg-3 col-xs-6">
      <!-- small box -->
      <div class="small-box bg-red">
        <div class="inner">
          
        </div>
        <div class="icon">
          <i class="ion ion-stats-bars"></i>
        </div>
        <!--a href="#" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a-->
      </div>
    </div><!-- ./col -->
    <div class="col-lg-3 col-xs-6">
      <!-- small box -->
      <div class="small-box  bg-green">
        <div class="inner">
          
        </div>
        <div class="icon">
          <i class="ion ion-person-add"></i>
        </div>
        <!--a href="#" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a-->
      </div>
    </div><!-- ./col -->
    <div class="col-lg-3 col-xs-6">
      <!-- small box -->
      <div class="small-box bg-yellow">
        <div class="inner">
          
        </div>
        <div class="icon">
          <i class="ion ion-pie-graph"></i>
        </div>
        <!--a href="#" class="small-box-footer">{% trans %}More info{% endtrans %} <i class="fa fa-arrow-circle-right"></i></a-->
      </div>
    </div><!-- ./col -->
</div>	
<div class="row"> 
	<div class="col-md-6" id="weekActivity">    
		
	</div>
	<div class="col-md-6">    
		<div class="box box-primary">
                <div class="box-header with-border">
                  <i class="fa fa-bar-chart-o"></i>
                  <h3 class="box-title">{% trans %}WebSite Yearly Activities{% endtrans %}</h3>
                  <!--div class="box-tools pull-right">
                    <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                    <button class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                  </div-->
                </div>
                <div class="box-body">
                  <canvas id="siteYearlyActivitiesChart" height="350"></canvas>
                </div>
                <div class="box-footer">
             		<div class="row">
	                  	<div class="col-lg-4">
	                  		<div class="gauge border-right">
		                  		<canvas width="90" height="50" data-type="%" data-max="100" data-value="{{ thisYear['ga:bounceRate'] }}"></canvas>
		                  		<div class="label"></div>
		                  		<div class="knob-label">{% trans %}This Year Bounce Rate{% endtrans %}</div>
	                  		</div>
	                  	</div>
	                  	<div class="col-lg-4">
	                  		<div class="gauge border-right">
		                  		<canvas width="90" height="50" data-color-start="#00a65a" data-color-stop="#00a65a" data-max="{{ thisYear['ga:users'] + lastYear['ga:users']  }}" data-value="{{ thisYear['ga:users'] }}"></canvas>
		                  		<div class="label"></div>
		                  		<div class="knob-label">{% trans %}This Year Visitors{% endtrans %}</div>
	                  		</div>
	                  	</div>
	                  	<div class="col-lg-4">
	                  		<div class="gauge">
		                  		<canvas width="90" height="50" data-type="s" data-color-start="#00a65a" data-color-stop="#00a65a" data-max="{{ total['ga:avgSessionDuration'] > thisYear['ga:avgSessionDuration'] ? total['ga:avgSessionDuration'] : thisYear['ga:avgSessionDuration'] }}" data-value="{{ thisYear['ga:avgSessionDuration'] }}"></canvas>
		                  		<div class="label"></div>
		                  		<div class="knob-label">{% trans %}This Year Avg. Time{% endtrans %}</div>
	                  		</div>
	                  	</div>
	                  	
	                  	<div class="col-lg-4 clearfix clear-left">
	                  		<div class="gauge border-right">
		                  		<canvas width="90" height="50" data-type="%" data-max="100" data-value="{{ lastYear['ga:bounceRate'] }}"></canvas>
		                  		<div class="label"></div>
		                  		<div class="knob-label">{% trans %}Last Year Bounce Rate{% endtrans %}</div>
	                  		</div>
	                  	</div>
	                  	<div class="col-lg-4">
	                  		<div class="gauge border-right">
		                  		<canvas width="90" height="50" data-color-start="#00a65a" data-color-stop="#00a65a" data-max="{{ thisYear['ga:users'] + lastYear['ga:users'] }}" data-value="{{ lastYear['ga:users'] }}"></canvas>
		                  		<div class="label"></div>
		                  		<div class="knob-label">{% trans %}Last Year Visitors{% endtrans %}</div>
	                  		</div>
	                  	</div>
	                  	<div class="col-lg-4">
	                  		<div class="gauge">
		                  		<canvas width="90" height="50" data-type="s" data-color-start="#00a65a" data-color-stop="#00a65a" data-max="{{ total['ga:avgSessionDuration'] > lastYear['ga:avgSessionDuration'] ? total['ga:avgSessionDuration'] : lastYear['ga:avgSessionDuration'] }}" data-value="{{ lastYear['ga:avgSessionDuration'] }}"></canvas>
		                  		<div class="label"></div>
		                  		<div class="knob-label">{% trans %}Last Year Avg. Time{% endtrans %}</div>
	                  		</div>
	                  	</div>
	                 </div>
             	</div>
        </div>
	</div>
	<div class="col-md-12">    
		<div class="box">
                <div class="box-header">
                  <h3 class="box-title">{% trans %}Most Popular WebPages{% endtrans %}</h3>
                </div><!-- /.box-header -->
                <div class="box-body no-padding">
                  <table class="table table-striped">
                    <tbody><tr>
                      <th style="width: 10px">#</th>
                      <th>{% trans %}Title / Path{% endtrans %}</th>
                      <th style="text-align: center">{% trans %}Page Views{% endtrans %}</th>
                    </tr>
                    {% for site in topSites %}
                    <tr>
                      <td>{{ loop.index }}.</td>
                      <td><span class="text-info">{{ site[1] }}</span> <small>{{ site[0] }}</small></td>
                      <td style="text-align: center"><span class="badge bg-info">{{ site[2] }}</span></td>
                    </tr>
                    {% endfor %}
                  </tbody></table>
                </div><!-- /.box-body -->
              </div>

	</div>
	{# <div class="col-md-4">    
		<div class="box">
                <div class="box-header">
                  <h3 class="box-title">{% trans %}Most Popular Posts{% endtrans %}</h3>
                </div><!-- /.box-header -->
                <div class="box-body no-padding">
                  <table class="table table-striped">
                    <tbody><tr>
                      <th style="width: 10px">#</th>
                      <th>{% trans %}Title / Path{% endtrans %}</th>
                      <th style="text-align: center">{% trans %}Posts Views{% endtrans %}</th>
                    </tr>
                    {% for site in topPosts %}
                    <tr>
                      <td>{{ loop.index }}.</td>
                      <td><span class="text-info">{{ site[1] }}</span> <small>{{ site[0] }}</small></td>
                      <td style="text-align: center"><span class="badge bg-info">{{ site[2] }}</span></td>
                    </tr>
                    {% endfor %}
                  </tbody></table>
                </div><!-- /.box-body -->
              </div>

	</div>
	<div class="col-md-4">    
		<div class="box">
                <div class="box-header">
                  <h3 class="box-title">{% trans %}Most Popular Products{% endtrans %}</h3>
                </div><!-- /.box-header -->
                <div class="box-body no-padding">
                  <table class="table table-striped">
                    <tbody><tr>
                      <th style="width: 10px">#</th>
                      <th>{% trans %}Title / Path{% endtrans %}</th>
                      <th style="text-align: center">{% trans %}Products Views{% endtrans %}</th>
                    </tr>
                    {% for site in topProducts %}
                    <tr>
                      <td>{{ loop.index }}.</td>
                      <td><span class="text-info">{{ site[1] }}</span> <small>{{ site[0] }}</small></td>
                      <td style="text-align: center"><span class="badge bg-info">{{ site[2] }}</span></td>
                    </tr>
                    {% endfor %}
                  </tbody></table>
                </div><!-- /.box-body -->
              </div>

	</div> #}
</div>             	
<script>


$('document').ready(function(){

	{% set maxWeekActivity = 0 %}
	{% set maxYearActivity = 0 %}


	var chartsData = {
		'siteActivitiesLastWeek': [ {% for n in siteActivitiesLastWeek %}{{ (loop.index > 1 ? ',' : '') ~ n[1] }}{% set maxWeekActivity = maxWeekActivity < n[1] ? n[1] : maxWeekActivity %}{% endfor %} ],
		'siteActivitiesThisWeek': [ {% for n in siteActivitiesThisWeek %}{{ (loop.index > 1 ? ',' : '') ~ n[1] }}{% set maxWeekActivity = maxWeekActivity < n[1] ? n[1] : maxWeekActivity %}{% endfor %} ],
		'siteActivitiesLastYear': [ {% for n in siteActivitiesLastYear %}{{ (loop.index > 1 ? ',' : '') ~ n[1] }}{% set maxYearActivity = maxYearActivity < n[1] ? n[1] : maxYearActivity %}{% endfor %} ],
		'siteActivitiesThisYear': [ {% for n in siteActivitiesThisYear %}{{ (loop.index > 1 ? ',' : '') ~ n[1] }}{% set maxYearActivity = maxYearActivity < n[1] ? n[1] : maxYearActivity %}{% endfor %} ]
	}

	var maxChartData = {
		
		'maxWeekActivity': {{ maxWeekActivity }},
		'maxYearActivity': {{ maxYearActivity }}
	}
	
	var weekLabels = [];
	var weekDate = moment().startOf('week');
	for (i=0;i<7;i++)
	{
		weekLabels.push(weekDate.add(i ? 1 : 0, 'days').format('ddd'))
	}


	var monthLabels = [];
	var monthDate = moment().startOf('year');
	for (i=0;i<12;i++)
	{
		monthLabels.push(monthDate.add(i ? 1 : 0, 'months').format('MMM'))
	}	

	$('#siteWeeklyActivitiesChart').attr('width', $('#siteWeeklyActivitiesChart').parent().width());
	$('#siteYearlyActivitiesChart').attr('width', $('#siteYearlyActivitiesChart').parent().width());



	var ctxWeek = document.getElementById("siteWeeklyActivitiesChart").getContext("2d");
	var ctxYear = document.getElementById("siteYearlyActivitiesChart").getContext("2d");

	var dataWeek = {
	    labels: weekLabels,
	    datasets: [
	    	{
	            label: "Last Week",
	            fillColor: "rgba(99, 194, 222,0.6)",
	            strokeColor: "rgba(99, 194, 222,1)",
	            pointColor: "rgba(99, 194, 222,1)",
	            pointStrokeColor: "#fff",
	            pointHighlightFill: "#fff",
	            pointHighlightStroke: "rgba(99, 194, 222,1)",
	            data: chartsData.siteActivitiesLastWeek
	        },
	        {
	            label: "This Week",
	            fillColor: "rgba(77, 189, 116,0.6)",
	            strokeColor: "rgba(77, 189, 116,1)",
	            pointColor: "rgba(77, 189, 116,1)",
	            pointStrokeColor: "#fff",
	            pointHighlightFill: "#fff",
	            pointHighlightStroke: "rgba(77, 189, 116,1)",
	            data: chartsData.siteActivitiesThisWeek
	        }
	        
	    ]
	};

	var dataYear = {
	    labels: monthLabels,
	    datasets: [
	    	{
	            label: "Last Year",
	            fillColor: "rgba(99, 194, 222,0.9)",
	            strokeColor: "rgba(99, 194, 222,1)",
	            pointColor: "rgba(99, 194, 222,1)",
	            pointStrokeColor: "#fff",
	            pointHighlightFill: "#fff",
	            pointHighlightStroke: "rgba(99, 194, 222,1)",
	            data: chartsData.siteActivitiesLastYear
	        },
	        {
	            label: "This Year",
	            fillColor: "rgba(77, 189, 116,0.9)",
	            strokeColor: "rgba(77, 189, 116,1)",
	            pointColor: "rgba(77, 189, 116,1)",
	            pointStrokeColor: "#fff",
	            pointHighlightFill: "#fff",
	            pointHighlightStroke: "rgba(77, 189, 116,1)",
	            data: chartsData.siteActivitiesThisYear
	        }
	        
	    ]
	};

	var lineOptions = {
		animation: false,
		scaleOverride: true,
		scaleSteps: 5,
		scaleStepWidth: Math.round(maxChartData.maxWeekActivity / 40) * 10,
		scaleStartValue: 0,
	    ///Boolean - Whether grid lines are shown across the chart
	    scaleShowGridLines : true,

	    //String - Colour of the grid lines
	    scaleGridLineColor : "rgba(0,0,0,.05)",

	    //Number - Width of the grid lines
	    scaleGridLineWidth : 1,

	    //Boolean - Whether to show horizontal lines (except X axis)
	    scaleShowHorizontalLines: true,

	    //Boolean - Whether to show vertical lines (except Y axis)
	    scaleShowVerticalLines: false,

	    //Boolean - Whether the line is curved between points
	    bezierCurve : true,

	    //Number - Tension of the bezier curve between points
	    bezierCurveTension : 0.4,

	    //Boolean - Whether to show a dot for each point
	    pointDot : true,

	    //Number - Radius of each point dot in pixels
	    pointDotRadius : 4,

	    //Number - Pixel width of point dot stroke
	    pointDotStrokeWidth : 1,

	    //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
	    pointHitDetectionRadius : 20,

	    //Boolean - Whether to show a stroke for datasets
	    datasetStroke : true,

	    //Number - Pixel width of dataset stroke
	    datasetStrokeWidth : 2,

	    //Boolean - Whether to fill the dataset with a colour
	    datasetFill : true,

	    //String - A legend template
	    

	};

	var barOptions = {
		scaleOverride: true,
		scaleSteps: 5,
		scaleStepWidth: Math.round(maxChartData.maxYearActivity / 40) * 10,

	    //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
	    scaleBeginAtZero : true,

	    //Boolean - Whether grid lines are shown across the chart
	    scaleShowGridLines : true,

	    //String - Colour of the grid lines
	    scaleGridLineColor : "rgba(0,0,0,.05)",

	    //Number - Width of the grid lines
	    scaleGridLineWidth : 1,

	    //Boolean - Whether to show horizontal lines (except X axis)
	    scaleShowHorizontalLines: true,

	    //Boolean - Whether to show vertical lines (except Y axis)
	    scaleShowVerticalLines: false,

	    //Boolean - If there is a stroke on each bar
	    barShowStroke : true,

	    //Number - Pixel width of the bar stroke
	    barStrokeWidth : 2,

	    //Number - Spacing between each of the X value sets
	    barValueSpacing : 5,

	    //Number - Spacing between data sets within X values
	    barDatasetSpacing : 1,

	    //String - A legend template


	}

	    

	var siteWeeklyActivitiesChart = new Chart(ctxWeek).Line(dataWeek, lineOptions);


	// options.scaleStepWidth = Math.round(maxChartData.maxYearActivity / 40) * 10;


	var siteYearlyActivitiesChart = new Chart(ctxYear).Bar(dataYear, barOptions);


	var opts = {
	  lines: 12, // The number of lines to draw
	  angle: 0.1, // The length of each line
	  lineWidth: 0.44, // The line thickness
	  pointer: {
	    length: 0.84, // The radius of the inner circle
	    strokeWidth: 0.035, // The rotation offset
	    color: '#000000' // Fill color
	  },
	  limitMax: 'true',   // If true, the pointer will not go past the end of the gauge
	  //percentColors: [[0.0, '#4ebd74'],[0.5, '#f4e32b'],[1.0, '#de0e1d']],   // Colors
	  strokeColor: '#E0E0E0',   // to see which ones work best for you
	  generateGradient: true
	};
	// var target = document.getElementById('bounceRateLastWeek'); // your canvas element
	// var gauge = new Gauge(target).setOptions(opts); // create sexy gauge!
	// gauge.maxValue = 100; // set max gauge value
	// gauge.animationSpeed = 32; // set animation speed (32 is default value)
	// // gauge.setTextField();
	// gauge.set(99); // set actual value

	// console.log(document.getElementById('bounceRateLastWeek'));
	$('.gauge canvas').gauge(opts)

})

$.fn.gauge = function(opts) {
  this.each(function() {
    var $this = $(this),
        data = $this.data();

    if (data.gauge) {
      data.gauge.stop();
      delete data.gauge;
    }
    if (opts !== false) {

   	  opts.colorStart = $this.data('color-start') ? $this.data('color-start') : '#b2101d'
	  opts.colorStop = $this.data('color-stop') ? $this.data('color-stop') : '#e2213c'
	  data.gauge = new Gauge(this).setOptions(opts);
      data.gauge.maxValue = parseFloat($this.data('max'));
      data.gauge.animationSpeed = 32;
      data.gauge.set(parseFloat($this.data('value')))
      var $label = $this.parent().find('.label')
      if($label.length)
      {
      	if($this.data('type') == '%') $label.addClass('label-percent')
      	else if($this.data('type') == 's') $label.addClass('label-seconds')

      	data.gauge.setTextField($label.get( 0 ));
      }
    }
  });
  return this;
};



</script>


{% endblock %}
